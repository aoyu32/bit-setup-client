// ==================== 颜色映射定义 ====================
@use "sass:map";
@use "sass:meta";
@use "sass:color";
@use "sass:math";

$theme: (
    light:(
        // 主品牌色 (Primary - changed to teal)
        c-p: #008080,
        c-p-light: #00a3a3,
        c-p-lighter: #00cccc,
        c-p-lightest: #b2f5f5,
        c-p-dark: #006666,
        c-p-darker: #004d4d,
        c-p-darkest: #003333,

        // 辅助品牌色 (Secondary - changed to coral)
        c-s: #ff6b6b,
        c-s-light: #ff8e8e,
        c-s-lighter: #ffb3b3,
        c-s-lightest: #ffe5e5,
        c-s-dark: #e05555,
        c-s-darker: #c23e3e,
        c-s-darkest: #a32929,

        // 中性色 (Greys - kept similar but adjusted slightly)
        c-g: #ffffff,
        c-g0: #f8f9fa,
        c-g1: #e9ecef,
        c-g2: #dee2e6,
        c-g3: #ced4da,
        c-g4: #adb5bd,
        c-g5: #6c757d,
        c-g6: #495057,
        c-g7: #343a40,
        c-g8: #212529,
        c-g9: #1a1e21,
        c-g10: #000000,

        // 功能色
        success: #28a745,  // Green
        warning: #ffc107,  // Yellow
        error: #dc3545,    // Red
        info: #17a2b8,    // Cyan
    ),
    dark: (
        // 主品牌色 (Darker teal)
        c-p: #004d4d,
        c-p-light: #006666,
        c-p-lighter: #008080,
        c-p-lightest: #00b3b3,
        c-p-dark: #003333,
        c-p-darker: #001a1a,
        c-p-darkest: #000d0d,

        // 辅助品牌色 (Darker coral)
        c-s: #b33e3e,
        c-s-light: #cc4d4d,
        c-s-lighter: #e55c5c,
        c-s-lightest: #ff8080,
        c-s-dark: #992e2e,
        c-s-darker: #801f1f,
        c-s-darkest: #661414,

        // 中性色 (Dark theme greys)
        c-g: #121212,
        c-g0: #1e1e1e,
        c-g1: #252525,
        c-g2: #2e2e2e,
        c-g3: #3d3d3d,
        c-g4: #525252,
        c-g5: #6e6e6e,
        c-g6: #8e8e8e,
        c-g7: #b3b3b3,
        c-g8: #d9d9d9,
        c-g9: #e8e8e8,
        c-g10: #ffffff,

        // 功能色
        success: #218838,  // Darker green
        warning: #e0a800,  // Darker yellow
        error: #c82333,    // Darker red
        info: #138496,    // Darker cyan
    )
);
$currentTheme : light;

@mixin c-t() {
    @each $key, $value in $theme {
        $currentTheme : $key !global;

        html[data-theme='#{$key}'] & {
            @content;
        }
    }
}

/// 快速生成阴影
/// @param {string} $size - 阴影尺寸 (small/medium/large)
/// @param {color} $color - 阴影颜色 (默认rgba(#000, 0.15))
/// @param {number} $opacity - 阴影透明度 (0-1, 可选)
@function shadow($size: 'medium', $color: null, $opacity: null) {
    // 设置默认阴影颜色
    $shadow-color: if($color, $color, rgba(#000, 0.15));

    // 处理透明度覆盖
    @if $opacity !=null {
        $shadow-color: rgba($shadow-color, $opacity);
    }

    // 返回不同尺寸的阴影
    @if $size =='s' {
        @return 0 1px 2px 0 $shadow-color;
    }

    @else if $size =='m' {
        @return 0 2px 6px 0 $shadow-color;
    }

    @else if $size =='l' {
        @return 0 4px 12px 0 $shadow-color;
    }

    @else {
        @warn "Shadow size '#{$size}' is invalid. Use s/m/l.";
        @return 0 2px 6px 0 $shadow-color; // 默认返回中等阴影
    }
}

// 颜色透明度调整
// 用法: alpha($color-primary, 0.5)
@function alpha($color, $opacity) {
    @return rgba($color, $opacity);
}

@function color($key, $opacity: null) {
    $themeMap: map.get($theme, $currentTheme);

    @if map.has-key($themeMap, $key) {
        $color: map.get($themeMap, $key);

        @if $opacity !=null {
            @return rgba($color, $opacity);
        }

        @else {
            @return $color;
        }
    }

    @warn "Unknown theme color: #{$key}";
    @return null;
}

// 颜色明度调整 - 使颜色变亮
// 用法: lighten-color($color-primary, 10%)
@function lighten($color, $percentage) {
    $color-value: if(meta.type-of($color)=='string', color($color), $color);
    @return color.scale($color-value, $lightness: $percentage);
}

// 颜色明度调整 - 使颜色变暗
// 用法: darken-color($color-primary, 10%)
@function darken($color, $percentage) {
    $color-value: if(meta.type-of($color)=='string', color($color), $color);
    @return color.scale($color-value, $lightness: -$percentage);
}

/// 智能颜色调整 (自动判断变亮/变暗)
/// @param {string|color} $color - 颜色键名或具体颜色值
/// @param {number} $percentage - 百分比 (-100%到100%)
/// @param {number} $opacity - 可选透明度 (0-1)
@function adjust-color($color, $percentage, $opacity: null) {
    // 首先检查是否是字符串类型的颜色名称
    $color-value: if(meta.type-of($color)=='string', color($color), $color);

    // 检查颜色值是否为null
    @if $color-value ==null {
        @warn "Color '#{$color}' not found in $colors map or is not a valid color";

        // 如果是字符串但在map中找不到，尝试直接使用这个颜色名
        @if meta.type-of($color)=='string' {
            @if $color =='white' {
                $color-value: #ffffff;
            }

            @else if $color =='black' {
                $color-value: #000000;
            }

            @else {
                // 如果不是特殊处理的颜色名，返回一个默认颜色
                $color-value: #000000;
            }
        }

        @else {
            $color-value: #000000;
        }
    }

    // 应用亮度调整
    $adjusted-color: color.scale($color-value, $lightness: $percentage);

    // 应用透明度（如果提供）
    @return if($opacity, rgba($adjusted-color, $opacity), $adjusted-color);
}